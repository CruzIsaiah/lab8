{"ast":null,"code":"var _jsxFileName = \"/Users/zay/github/web102_unit7lab/client/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Card.css';\nimport more from './more.png';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../client'; // Import the Supabase client\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = props => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [iconUrl, setIconUrl] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch the transformed image URL from Supabase Storage\n    const fetchIconUrl = async () => {\n      if (props.icon) {\n        try {\n          const {\n            data,\n            error\n          } = await supabase.storage.from('iconBuild').getPublicUrl(props.icon, {\n            transform: {\n              width: 100,\n              height: 100\n            }\n          });\n\n          if (error) {\n            throw error;\n          }\n\n          setIconUrl(data.publicUrl);\n          setLoading(false);\n        } catch (error) {\n          console.error('Error fetching icon URL:', error.message);\n          setError(error.message);\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchIconUrl();\n  }, [props.icon]);\n\n  const updateCount = async () => {\n    try {\n      // Update bet count in the database\n      await supabase.from('Posts').update({\n        betCount: count + 1\n      }).eq('id', props.id); // Update the bet count in the UI\n\n      setCount(count => count + 1);\n    } catch (error) {\n      console.error('Error updating bet count:', error.message); // Handle error, e.g., display error message to the user\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: 'edit/' + props.id,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"moreButton\",\n        alt: \"edit button\",\n        src: more\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"author\",\n      children: \"by \" + props.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), iconUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon\",\n      src: iconUrl,\n      alt: \"character icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lvl: \", props.LVL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Attack: \", props.ATK]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Defense: \", props.DEF]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"betButton\",\n      onClick: updateCount,\n      children: [\"\\uD83D\\uDC4D vote Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"VZvCBfjywFWLxpMlvJn0bqXD7Cc=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","more","Link","supabase","Card","props","count","setCount","iconUrl","setIconUrl","loading","setLoading","error","setError","fetchIconUrl","icon","data","storage","from","getPublicUrl","transform","width","height","publicUrl","console","message","updateCount","update","betCount","eq","id","title","author","description","LVL","ATK","DEF"],"sources":["/Users/zay/github/web102_unit7lab/client/src/components/Card.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Card.css';\nimport more from './more.png';\nimport { Link } from 'react-router-dom';\nimport { supabase } from '../client'; // Import the Supabase client\n\nconst Card = (props) => {\n    const [count, setCount] = useState(0);\n    const [iconUrl, setIconUrl] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        // Fetch the transformed image URL from Supabase Storage\n        const fetchIconUrl = async () => {\n            if (props.icon) {\n                try {\n                    const { data, error } = await supabase\n                        .storage\n                        .from('iconBuild')\n                        .getPublicUrl(props.icon, {\n                            transform: {\n                                width: 100,\n                                height: 100,\n                            },\n                        });\n\n                    if (error) {\n                        throw error;\n                    }\n\n                    setIconUrl(data.publicUrl);\n                    setLoading(false);\n                } catch (error) {\n                    console.error('Error fetching icon URL:', error.message);\n                    setError(error.message);\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchIconUrl();\n    }, [props.icon]);\n\n    const updateCount = async () => {\n        try {\n            // Update bet count in the database\n            await supabase\n                .from('Posts')\n                .update({ betCount: count + 1 })\n                .eq('id', props.id);\n\n            // Update the bet count in the UI\n            setCount((count) => count + 1);\n        } catch (error) {\n            console.error('Error updating bet count:', error.message);\n            // Handle error, e.g., display error message to the user\n        }\n    };\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div className=\"Card\">\n            <Link to={'edit/' + props.id}>\n                <img className=\"moreButton\" alt=\"edit button\" src={more} />\n            </Link>\n            <h2 className=\"title\">{props.title}</h2>\n            <h3 className=\"author\">{\"by \" + props.author}</h3>\n            <p className=\"description\">{props.description}</p>\n            {iconUrl && (\n                <img className=\"icon\" src={iconUrl} alt=\"character icon\" />\n            )}\n            <div className=\"stats\">\n                <p>Lvl: {props.LVL}</p>\n                <p>Attack: {props.ATK}</p>\n                <p>Defense: {props.DEF}</p>\n            </div>\n            <button className=\"betButton\" onClick={updateCount}>\n                üëç vote Count: {count}\n            </button>\n        </div>\n    );\n};\n\nexport default Card;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}